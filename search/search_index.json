{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Programmation 1 - Automne 2022 - C\u00e9gep de Victoriaville Enseignants Groupe 00001 : Fr\u00e9d\u00e9rik Taleb Groupe 00002 : Carine Croteau Horaire Lundi Mardi Mercredi Jeudi Vendredi 8h15 Groupe 1 Groupe 2 9h15 Groupe 1 Groupe 2 10h15 Groupe 2 Groupe 1 11h15 Groupe 2 Groupe 1 12h15 13h15 Groupe 2 14h15 Groupe 2 15h15 Groupe 1 16h15 Groupe 1 GitHub Classroom Groupe 00001 : https://classroom.github.com/classrooms/104108050-programmation1-a22-gr-1 Groupe 00002 : https://classroom.github.com/classrooms/104108050-programmation1-a22-gr-2 Planification de la session Semaine Th\u00e9matique Semaine 1 Pr\u00e9sentation du cours et (introduction \u00e0 la programmation)[/introduction-programmation] Semaine 2 Structures de d\u00e9cision Semaine 3 Exercices et examen formatif #1 Semaine 4 Structures de d\u00e9cision imbriqu\u00e9es Semaine 5 Examen 1 (Lecture - \u00c9criture - Si) : 15\\% Semaine 6 Proc\u00e9dures et fonctions Semaine 7 Boucles Semaine 8 Boucles (suite) et gestion des exceptions Semaine 9 Examen 2 (Lecture- \u00c9criture - Si - While - For) : 30\\% Semaine 10 Tableaux Semaine 11 Tableaux 2D Semaine 12 Initiation \u00e0 la programmation orient\u00e9e objets\u200b Semaine 13 Laboratoire : 15\\% Semaine 14 Laboratoire (suite) Semaine 9 Examen final : 40\\%","title":"Accueil"},{"location":"#programmation-1-automne-2022-cegep-de-victoriaville","text":"","title":"Programmation 1 - Automne 2022 - C\u00e9gep de Victoriaville"},{"location":"#enseignants","text":"Groupe 00001 : Fr\u00e9d\u00e9rik Taleb Groupe 00002 : Carine Croteau","title":"Enseignants"},{"location":"#horaire","text":"Lundi Mardi Mercredi Jeudi Vendredi 8h15 Groupe 1 Groupe 2 9h15 Groupe 1 Groupe 2 10h15 Groupe 2 Groupe 1 11h15 Groupe 2 Groupe 1 12h15 13h15 Groupe 2 14h15 Groupe 2 15h15 Groupe 1 16h15 Groupe 1","title":"Horaire"},{"location":"#github-classroom","text":"Groupe 00001 : https://classroom.github.com/classrooms/104108050-programmation1-a22-gr-1 Groupe 00002 : https://classroom.github.com/classrooms/104108050-programmation1-a22-gr-2","title":"GitHub Classroom"},{"location":"#planification-de-la-session","text":"Semaine Th\u00e9matique Semaine 1 Pr\u00e9sentation du cours et (introduction \u00e0 la programmation)[/introduction-programmation] Semaine 2 Structures de d\u00e9cision Semaine 3 Exercices et examen formatif #1 Semaine 4 Structures de d\u00e9cision imbriqu\u00e9es Semaine 5 Examen 1 (Lecture - \u00c9criture - Si) : 15\\% Semaine 6 Proc\u00e9dures et fonctions Semaine 7 Boucles Semaine 8 Boucles (suite) et gestion des exceptions Semaine 9 Examen 2 (Lecture- \u00c9criture - Si - While - For) : 30\\% Semaine 10 Tableaux Semaine 11 Tableaux 2D Semaine 12 Initiation \u00e0 la programmation orient\u00e9e objets\u200b Semaine 13 Laboratoire : 15\\% Semaine 14 Laboratoire (suite) Semaine 9 Examen final : 40\\%","title":"Planification de la session"},{"location":"apropos/","text":"\u00c0 propos Ce site a \u00e9t\u00e9 con\u00e7u dans le cadre du cours P\u00e9dagogie et num\u00e9rique au coll\u00e9gial dans le cadre du Travail #3.","title":"\u00c0 propos"},{"location":"apropos/#a-propos","text":"Ce site a \u00e9t\u00e9 con\u00e7u dans le cadre du cours P\u00e9dagogie et num\u00e9rique au coll\u00e9gial dans le cadre du Travail #3.","title":"\u00c0 propos"},{"location":"enconstruction/","text":"Contenu \u00e0 venir","title":"Semaine 2 - Exercice 2"},{"location":"enconstruction/#contenu-a-venir","text":"","title":"Contenu \u00e0 venir"},{"location":"instructions-entrees-sorties/","text":"Instruction d'entr\u00e9e et de sortie Lorem ipsum .... Sous-titre ... ... ...","title":"Instruction d'entr\u00e9e et de sortie"},{"location":"instructions-entrees-sorties/#instruction-dentree-et-de-sortie","text":"Lorem ipsum ....","title":"Instruction d'entr\u00e9e et de sortie"},{"location":"instructions-entrees-sorties/#sous-titre","text":"...","title":"Sous-titre"},{"location":"instructions-entrees-sorties/#_1","text":"...","title":"..."},{"location":"introduction-programmation/","text":"Introduction \u00e0 la programmation Mise en contexte Un ordinateur est une machine \u00e9lectronique programmable et capable de m\u00e9moriser, de retrouver et de traiter des donn\u00e9es.\u200b Depuis que vous \u00eates petits, vous avez appris \u00e0 \u00ab faire des choses \u00bb : \u200b lever la main ; saisir le coin sup\u00e9rieur droit de la page ; d\u00e9placer la main gauche \u00e0 droite ; \u200b ramener la main \u00e0 sa position initiale.\u200b etc.\u200b Malheureusement, l\u2019ordinateur n\u2019est pas intelligent.\u200b Il n\u2019a donc pas d\u2019aptitudes \u00e0 raisonner. \u200b Il ne peut pas analyser un probl\u00e8me et y apporter une solution. \u200b * Mais il sait tr\u00e8s bien ob\u00e9ir aux instructions et fera exactement tout ce qu\u2019on lui dira de faire\u2026 (SANS SE PLAINDRE)\u200b C\u2019est donc le programmeur qui se charge de l\u2019\u00e9tape de r\u00e9solution : il doit d\u00e9finir une solution et la transmettre \u00e0 l\u2019ordinateur. L\u2019un des avantages d\u2019utiliser un ordinateur plut\u00f4t qu\u2019un humain, c\u2019est ????\u200b D\u00e9finitions Programmation\u200b Travail consistant \u00e0 d\u00e9finir une s\u00e9quence d\u2019instructions qui seront ex\u00e9cut\u00e9es par un ordinateur.\u200b La programmation se divise en deux parties \u200b: * R\u00e9soudre le probl\u00e8me (algorithme)\u200b : D\u00e9terminer le travail que l\u2019ordinateur doit accomplir.\u200b *Mettre en \u0153uvre la solution retenue (Programmer). Programme\u200b S\u00e9quence d\u2019instructions indiquant les op\u00e9rations qu\u2019un ordinateur doit effectuer. \u200b Un bon programme :\u200b doit \u00eatre fonctionnel (qu\u2019il accomplisse la t\u00e2che qu\u2019on lui demande);\u200b peut \u00eatre lu et compris;\u200b *peut \u00eatre modifi\u00e9, si n\u00e9cessaire;\u200b respecte l\u2019\u00e9ch\u00e9ancier et le budget fix\u00e9s. \u00c9tapes de r\u00e9solution d'un probl\u00e8me\u200b Analyse - Comprendre (d\u00e9finir) le probl\u00e8me. Cette \u00e9tape est primordiale. Comment faire un programme si vous ne comprenez pas ce qu\u2019il doit faire ????\u200b\u200b Solution g\u00e9n\u00e9rale (algorithme) - D\u00e9finir une s\u00e9quence d\u2019op\u00e9rations permettant de r\u00e9soudre le probl\u00e8me dans un langage de tous les jours.\u200b\u200b V\u00e9rification - Effectuer ces op\u00e9rations pour voir si la solution r\u00e9sout effectivement le probl\u00e8me. \u00c9tapes de mise en oeuvre du programme Solution particuli\u00e8re (programme) - Traduire l\u2019algorithme dans un langage de programmation.\u200b Mise au point - Faire ex\u00e9cuter les instructions par l\u2019ordinateur. V\u00e9rifier les r\u00e9sultats et corriger le programme jusqu\u2019\u00e0 ce qu\u2019il fonctionne correctement.\u200b Utilisation - Se servir du programme. Algorithme Un algorithme, c\u2019est une s\u00e9quence d\u2019op\u00e9rations \u00e0 effectuer pour r\u00e9soudre un probl\u00e8me en un nombre fini d\u2019\u00e9tapes.\u200b Vous faites des algorithmes tous les jours ! Vous \u00eates \u00e9tonn\u00e9s ? Eh oui! puisqu\u2019un algorithme est simplement une description verbale ou \u00e9crite indiquant l\u2019encha\u00eenement des actions n\u00e9cessaires \u00e0 l\u2019accomplissement d\u2019une t\u00e2che.\u200b Exemple: Algorithme pour d\u00e9marrer une automobile \u00c9tapes \u00e0 suivre pour r\u00e9aliser un algorithme \u200b S\u2019assurer de bien comprendre le probl\u00e8me \u00e0 r\u00e9soudre ; \u200b R\u00e9aliser un exemple concret ; \u200b Faire une premi\u00e8re \u00e9bauche d\u2019une solution envisag\u00e9e ; \u200b Identifier de fa\u00e7on claire les variables en entr\u00e9e, les variables en sortie et les constantes ; \u200b Consid\u00e9rer chaque \u00e9tape et les d\u00e9tailler si cela s\u2019av\u00e8re n\u00e9cessaire ; \u200b Lorsque l\u2019algorithme est suffisamment clair, faire la trace ; \u200b Traduire l\u2019algorithme dans un langage de programmation ; \u200b Faire les jeux d\u2019essais. Instructions Une instruction est une op\u00e9ration \u00e9l\u00e9mentaire d\u2019un algorithme. \u200b C\u2019est une commande que l\u2019interlocuteur peut comprendre et r\u00e9aliser.\u200b Une instruction pr\u00e9cise : \u200b le nom de l\u2019op\u00e9ration \u00e0 effectuer (lire, \u00e9crire, additionner, comparer...)\u200b les donn\u00e9es qui font l\u2019objet de l\u2019op\u00e9ration. Langages de programmation Ensemble de r\u00e8gles, de symboles et de mots servant \u00e0 \u00e9crire des programmes.\u200b Pour r\u00e9diger un programme, on n\u2019emploie pas une langue comme le fran\u00e7ais ou l\u2019anglais. On utilise plut\u00f4t un langage de programmation, qui permet d\u2019\u00e9crire uniquement des instructions que l\u2019ordinateur peut ex\u00e9cuter. \u200b Petit groupe de mots (if then else while)\u200b Symboles math\u00e9matiques +-*/\u200b Ensemble de r\u00e8gles de grammaire tr\u00e8s pr\u00e9cises\u200b \u00c9crire un programme consiste \u00e0 traduire un algorithme dans un langage de programmation. Comme on apprend la logique de la programmation, le cours de Programmation 1 pourrait se donner dans n\u2019importe quel langage .\u200b \u200b \u200b","title":"Semaine 1 - Introduction \u00e0 la programmation"},{"location":"introduction-programmation/#introduction-a-la-programmation","text":"","title":"Introduction \u00e0 la programmation"},{"location":"introduction-programmation/#mise-en-contexte","text":"Un ordinateur est une machine \u00e9lectronique programmable et capable de m\u00e9moriser, de retrouver et de traiter des donn\u00e9es.\u200b Depuis que vous \u00eates petits, vous avez appris \u00e0 \u00ab faire des choses \u00bb : \u200b lever la main ; saisir le coin sup\u00e9rieur droit de la page ; d\u00e9placer la main gauche \u00e0 droite ; \u200b ramener la main \u00e0 sa position initiale.\u200b etc.\u200b Malheureusement, l\u2019ordinateur n\u2019est pas intelligent.\u200b Il n\u2019a donc pas d\u2019aptitudes \u00e0 raisonner. \u200b Il ne peut pas analyser un probl\u00e8me et y apporter une solution. \u200b * Mais il sait tr\u00e8s bien ob\u00e9ir aux instructions et fera exactement tout ce qu\u2019on lui dira de faire\u2026 (SANS SE PLAINDRE)\u200b C\u2019est donc le programmeur qui se charge de l\u2019\u00e9tape de r\u00e9solution : il doit d\u00e9finir une solution et la transmettre \u00e0 l\u2019ordinateur. L\u2019un des avantages d\u2019utiliser un ordinateur plut\u00f4t qu\u2019un humain, c\u2019est ????\u200b","title":"Mise en contexte"},{"location":"introduction-programmation/#definitions","text":"","title":"D\u00e9finitions"},{"location":"introduction-programmation/#programmation","text":"Travail consistant \u00e0 d\u00e9finir une s\u00e9quence d\u2019instructions qui seront ex\u00e9cut\u00e9es par un ordinateur.\u200b La programmation se divise en deux parties \u200b: * R\u00e9soudre le probl\u00e8me (algorithme)\u200b : D\u00e9terminer le travail que l\u2019ordinateur doit accomplir.\u200b *Mettre en \u0153uvre la solution retenue (Programmer).","title":"Programmation\u200b"},{"location":"introduction-programmation/#programme","text":"S\u00e9quence d\u2019instructions indiquant les op\u00e9rations qu\u2019un ordinateur doit effectuer. \u200b Un bon programme :\u200b doit \u00eatre fonctionnel (qu\u2019il accomplisse la t\u00e2che qu\u2019on lui demande);\u200b peut \u00eatre lu et compris;\u200b *peut \u00eatre modifi\u00e9, si n\u00e9cessaire;\u200b respecte l\u2019\u00e9ch\u00e9ancier et le budget fix\u00e9s.","title":"Programme\u200b"},{"location":"introduction-programmation/#etapes-de-resolution-dun-probleme","text":"Analyse - Comprendre (d\u00e9finir) le probl\u00e8me. Cette \u00e9tape est primordiale. Comment faire un programme si vous ne comprenez pas ce qu\u2019il doit faire ????\u200b\u200b Solution g\u00e9n\u00e9rale (algorithme) - D\u00e9finir une s\u00e9quence d\u2019op\u00e9rations permettant de r\u00e9soudre le probl\u00e8me dans un langage de tous les jours.\u200b\u200b V\u00e9rification - Effectuer ces op\u00e9rations pour voir si la solution r\u00e9sout effectivement le probl\u00e8me.","title":"\u00c9tapes de r\u00e9solution d'un probl\u00e8me\u200b"},{"location":"introduction-programmation/#etapes-de-mise-en-oeuvre-du-programme","text":"Solution particuli\u00e8re (programme) - Traduire l\u2019algorithme dans un langage de programmation.\u200b Mise au point - Faire ex\u00e9cuter les instructions par l\u2019ordinateur. V\u00e9rifier les r\u00e9sultats et corriger le programme jusqu\u2019\u00e0 ce qu\u2019il fonctionne correctement.\u200b Utilisation - Se servir du programme.","title":"\u00c9tapes de mise en oeuvre du programme"},{"location":"introduction-programmation/#algorithme","text":"Un algorithme, c\u2019est une s\u00e9quence d\u2019op\u00e9rations \u00e0 effectuer pour r\u00e9soudre un probl\u00e8me en un nombre fini d\u2019\u00e9tapes.\u200b Vous faites des algorithmes tous les jours ! Vous \u00eates \u00e9tonn\u00e9s ? Eh oui! puisqu\u2019un algorithme est simplement une description verbale ou \u00e9crite indiquant l\u2019encha\u00eenement des actions n\u00e9cessaires \u00e0 l\u2019accomplissement d\u2019une t\u00e2che.\u200b Exemple: Algorithme pour d\u00e9marrer une automobile","title":"Algorithme"},{"location":"introduction-programmation/#etapes-a-suivre-pour-realiser-un-algorithme","text":"S\u2019assurer de bien comprendre le probl\u00e8me \u00e0 r\u00e9soudre ; \u200b R\u00e9aliser un exemple concret ; \u200b Faire une premi\u00e8re \u00e9bauche d\u2019une solution envisag\u00e9e ; \u200b Identifier de fa\u00e7on claire les variables en entr\u00e9e, les variables en sortie et les constantes ; \u200b Consid\u00e9rer chaque \u00e9tape et les d\u00e9tailler si cela s\u2019av\u00e8re n\u00e9cessaire ; \u200b Lorsque l\u2019algorithme est suffisamment clair, faire la trace ; \u200b Traduire l\u2019algorithme dans un langage de programmation ; \u200b Faire les jeux d\u2019essais.","title":"\u00c9tapes \u00e0 suivre pour r\u00e9aliser un algorithme \u200b"},{"location":"introduction-programmation/#instructions","text":"Une instruction est une op\u00e9ration \u00e9l\u00e9mentaire d\u2019un algorithme. \u200b C\u2019est une commande que l\u2019interlocuteur peut comprendre et r\u00e9aliser.\u200b Une instruction pr\u00e9cise : \u200b le nom de l\u2019op\u00e9ration \u00e0 effectuer (lire, \u00e9crire, additionner, comparer...)\u200b les donn\u00e9es qui font l\u2019objet de l\u2019op\u00e9ration.","title":"Instructions"},{"location":"introduction-programmation/#langages-de-programmation","text":"Ensemble de r\u00e8gles, de symboles et de mots servant \u00e0 \u00e9crire des programmes.\u200b Pour r\u00e9diger un programme, on n\u2019emploie pas une langue comme le fran\u00e7ais ou l\u2019anglais. On utilise plut\u00f4t un langage de programmation, qui permet d\u2019\u00e9crire uniquement des instructions que l\u2019ordinateur peut ex\u00e9cuter. \u200b Petit groupe de mots (if then else while)\u200b Symboles math\u00e9matiques +-*/\u200b Ensemble de r\u00e8gles de grammaire tr\u00e8s pr\u00e9cises\u200b \u00c9crire un programme consiste \u00e0 traduire un algorithme dans un langage de programmation.","title":"Langages de programmation"},{"location":"introduction-programmation/#comme-on-apprend-la-logique-de-la-programmation-le-cours-de-programmation-1-pourrait-se-donner-dans-nimporte-quel-langage","text":"\u200b \u200b","title":"Comme on apprend la logique de la programmation, le cours de Programmation 1 pourrait se donner dans n\u2019importe quel langage.\u200b"},{"location":"procedure/","text":"Proc\u00e9dure pour publier des fichiers Mardown dans divers formats (HTML et Power Point) Installation et configuration des outils requis T\u00e9l\u00e9charger et installer Python T\u00e9l\u00e9charger la derni\u00e8re version de Python en fonction de votre syst\u00e8me d'exploitation : https://www.python.org/downloads/ Installer Python en suivant la proc\u00e9dure d'installation GitHub GitHub est ... Cr\u00e9er un compte ou une organisation Cr\u00e9er un \"repository\" au nom username.github.io ou organisation.github.io Optionnel : Cr\u00e9er un \"repository\" qui servira \u00e0 stocker vos fichiers source Cloner les \"repository\" sur le poste de travail MkDocs MkDocs est un outil permettant de g\u00e9n\u00e9rer un site Web \u00e0 partir de fichiers \u00e9crits au format MarkDown Installer MkDock Ouvrir un terminal et ex\u00e9cuter la commande suivante (Python)[t%C3%A9l%C3%A9charger-et-installer-python] doit \u00eatre install\u00e9 sur le poste) : pip install mkdocs Cr\u00e9er votre site Ouvrir un terminal dans le dossier qui contiendra les fichiers sources de votre site (les .md) et ex\u00e9cuter la commande suivante : mkdocs new ./ Pour cr\u00e9er le site dans un sous-dossier, ex\u00e9cuter plut\u00f4t la commande suivante : mkdocs new nomDuDossier Cette commande cr\u00e9era : * Un fichier mkdocs.yml. Celui-ci contiendra le plan du site * Un dossier docs. Celui-ci contiendra les fichiers .md dans lequel le contenu du site sera r\u00e9dig\u00e9. * Un fichier index.md. Celui-ci se trouve dans le dossiers docs et contient un gabarit (template) de page d'accueil. R\u00e9diger le contenu. Fait un fichier .md par th\u00e9matique Finaliser la navivgation. \u00c9diter le fichier mkdocs.yml pour offrir un navigation simple et efficace G\u00e9n\u00e9rer le site web en HTML sur GitHub Pages GitHub Pages est ... D\u00e9ployer le site dans le dossier de destination Dans le dossier d\u00e9sirez, ouvrir un terminal et ex\u00e9cuter la commande suivante (adapter les chemins d'acc\u00e8s selon vos besoins) cd ../organisation.github.io/ mkdocs gh-deploy --config-file ../mes-sources/mkdocs.yml --remote-branch main Acc\u00e9der au contenu via l'url https://username.github.io ou https://organisation.github.io G\u00e9n\u00e9rer un pr\u00e9sentation PowerPoint en utilisant Pandoc ... Mise \u00e0 jour de contenu Modifier le contenu Mettre \u00e0 jour le contenu sur GitHub G\u00e9n\u00e9rer le code HTML G\u00e9n\u00e9rer la pr\u00e9sentation PowerPoint \u00c0 venir : Est-ce possible de g\u00e9n\u00e9rer le site automatiquement lorsque le code est d\u00e9ploy\u00e9?? Ressources {#ressources} Guide Markdown : https://www.markdownguide.org/ MkDocs : Pandoc : https://pandoc.org/","title":"Proc\u00e9dure"},{"location":"procedure/#procedure-pour-publier-des-fichiers-mardown-dans-divers-formats-html-et-power-point","text":"","title":"Proc\u00e9dure pour publier des fichiers Mardown dans divers formats (HTML et Power Point)"},{"location":"procedure/#installation-et-configuration-des-outils-requis","text":"","title":"Installation et configuration des outils requis"},{"location":"procedure/#telecharger-et-installer-python","text":"T\u00e9l\u00e9charger la derni\u00e8re version de Python en fonction de votre syst\u00e8me d'exploitation : https://www.python.org/downloads/ Installer Python en suivant la proc\u00e9dure d'installation","title":"T\u00e9l\u00e9charger et installer Python"},{"location":"procedure/#github","text":"GitHub est ... Cr\u00e9er un compte ou une organisation Cr\u00e9er un \"repository\" au nom username.github.io ou organisation.github.io Optionnel : Cr\u00e9er un \"repository\" qui servira \u00e0 stocker vos fichiers source Cloner les \"repository\" sur le poste de travail","title":"GitHub"},{"location":"procedure/#mkdocs","text":"MkDocs est un outil permettant de g\u00e9n\u00e9rer un site Web \u00e0 partir de fichiers \u00e9crits au format MarkDown Installer MkDock Ouvrir un terminal et ex\u00e9cuter la commande suivante (Python)[t%C3%A9l%C3%A9charger-et-installer-python] doit \u00eatre install\u00e9 sur le poste) : pip install mkdocs Cr\u00e9er votre site Ouvrir un terminal dans le dossier qui contiendra les fichiers sources de votre site (les .md) et ex\u00e9cuter la commande suivante : mkdocs new ./ Pour cr\u00e9er le site dans un sous-dossier, ex\u00e9cuter plut\u00f4t la commande suivante : mkdocs new nomDuDossier Cette commande cr\u00e9era : * Un fichier mkdocs.yml. Celui-ci contiendra le plan du site * Un dossier docs. Celui-ci contiendra les fichiers .md dans lequel le contenu du site sera r\u00e9dig\u00e9. * Un fichier index.md. Celui-ci se trouve dans le dossiers docs et contient un gabarit (template) de page d'accueil. R\u00e9diger le contenu. Fait un fichier .md par th\u00e9matique Finaliser la navivgation. \u00c9diter le fichier mkdocs.yml pour offrir un navigation simple et efficace","title":"MkDocs"},{"location":"procedure/#generer-le-site-web-en-html-sur-github-pages","text":"GitHub Pages est ... D\u00e9ployer le site dans le dossier de destination Dans le dossier d\u00e9sirez, ouvrir un terminal et ex\u00e9cuter la commande suivante (adapter les chemins d'acc\u00e8s selon vos besoins) cd ../organisation.github.io/ mkdocs gh-deploy --config-file ../mes-sources/mkdocs.yml --remote-branch main Acc\u00e9der au contenu via l'url https://username.github.io ou https://organisation.github.io","title":"G\u00e9n\u00e9rer le site web en HTML sur GitHub Pages"},{"location":"procedure/#generer-un-presentation-powerpoint-en-utilisant-pandoc","text":"...","title":"G\u00e9n\u00e9rer un pr\u00e9sentation PowerPoint en utilisant Pandoc"},{"location":"procedure/#mise-a-jour-de-contenu","text":"Modifier le contenu Mettre \u00e0 jour le contenu sur GitHub G\u00e9n\u00e9rer le code HTML G\u00e9n\u00e9rer la pr\u00e9sentation PowerPoint \u00c0 venir : Est-ce possible de g\u00e9n\u00e9rer le site automatiquement lorsque le code est d\u00e9ploy\u00e9??","title":"Mise \u00e0 jour de contenu"},{"location":"procedure/#ressources-ressources","text":"Guide Markdown : https://www.markdownguide.org/ MkDocs : Pandoc : https://pandoc.org/","title":"Ressources {#ressources}"},{"location":"exercices/instructions-entrees-sorties/","text":"Exercice - Instruction d'entr\u00e9e et de sortie Exercice \u00e0 venir...","title":"Exercice - Instruction d'entr\u00e9e et de sortie"},{"location":"exercices/instructions-entrees-sorties/#exercice-instruction-dentree-et-de-sortie","text":"Exercice \u00e0 venir...","title":"Exercice - Instruction d'entr\u00e9e et de sortie"},{"location":"exercices/introduction-programmation/","text":"Exercice - Introduction \u00e0 la programmation Mettre le contenu de la vid\u00e9o ici","title":"Semaine 1 - Exercice 1"},{"location":"exercices/introduction-programmation/#exercice-introduction-a-la-programmation","text":"Mettre le contenu de la vid\u00e9o ici","title":"Exercice - Introduction \u00e0 la programmation"}]}